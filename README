TimeAssertionMiner
	Ver 0.6	11/09/22 2:32:16


コードに仕掛ける時間地雷を書き出します。
	見た目：http://yfrog.com/z/hwmmmp


WHAT TimeAssert:
	KISSAKI社内で使われている物体で、
	・コード中に時間制限付きのAssertionコードを入れる
	・時間が来るまでは、通常のコメント/print文として扱われる
	・時間が来たらコード評価のタイミングでAssertionが発生する
	というものです。

	要するに時間で爆発するコメントです。


USAGE:
	DLして展開とか好きにすれば良いと思います。
	
	インターフェースをクリックすると、スクラップブックとかに勝手にコピーされます。
	好きな所にペーストするといいさ。
	
	[TimeMine setTimeMineLocalizedFormat:@"11/09/20 16:57:23" withLimitSec:3600 withComment:@""];//5481B2EE-8819-4687-B1A9-2F7101753D80

	このように書くと、コードが到達した際、11/09/20 16:57:23 から　3600秒後だと
	Assertionを吐いてコード実行が停止します。

	[あとでやろっかな]、や、[とりあえずこの処理で妥協、でもいつか直す]、
	[バグがあるのが判ってるけど正常系のみテストしてるとこ]
	などのメモに、
	//TODO
	とかやるよりはマシなので、ご利用ください。


MERIT/BENEFIT:
	明日の自分に確実に仕事を押し付ける事ができます。
	コメントならば無視できますし、忘れる事も可能ですが、
	TimeAssertは爆発しますので。


DEMERIT:
	コードになってしまうので、実行時等に必ず何かしらの動作をします。
	副作用が気になる環境では気をつけたい所。
	(時間取得しに行ったら落ちる環境とか、、orz)

	時間を扱っているため、サーバであればサーバの時間計測の影響を受けます。
	今んとこ時間系は日本時間をべた書きしてたような気がするので
	その、何だ、海外の人ご免。

	複数人での作業に"そのままでは"向きません。
	

NOW:
	Objective-C版のTimeMineに対応しています。
	JavaScript/GWT版のTimeAssert、
	PHP、Java、Ruby版のコードは出力してくれません。

	D&Dで線を引いて離したとこにあるコンテキストにコードを張る、とか考えてましたが
	時間が足りなかったのでその分時間単位とかを弄れるようにしました。
	
	30分後〜10日後、まで7段階のボマーの気分が味わえます。

	関連する肝心のTimeAssert系の各言語実装のモジュールをDLできるボタンを付けるつもりでしたが
	間に合いませんでしたので頑張ってググるとかしてください。
	TimeMine TimeAssert KISSAKI　とかで出てくると思います。
	
	Objective-C版はこちら
		https://gitorious.org/timemine


FUTURE:
	各言語版のDLスイッチつけたり、
	D&Dで行けるようにしたり、
	自分以外のユーザーの置いたMineを識別したりできるようにします。
	(社内ではそれ用のCのツールがあるんだけど、肥大化してるので切り出したい)

	コード中からTimeAssertを検出、一括での時限の変更などに対応するつもりです。
	

CAUTION:
	このアプリケーションを使った事に因る
	いかなる損害や失敗、それに基づく怨嗟とかあっても、当方に責任はありませんので
	ご了承ください。
